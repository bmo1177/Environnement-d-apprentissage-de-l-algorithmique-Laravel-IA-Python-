version: '3.8'

services:
  # MySQL Database for Laravel
  mysql:
    image: mysql:8.0
    container_name: learner-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: learner_db
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_USER: learner_user
      MYSQL_PASSWORD: 123456
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker/mysql/seed.sql:/docker-entrypoint-initdb.d/2-seed.sql
    networks:
      - learner-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # PHP-FPM for Laravel
  php-fpm:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: learner-php
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=learner_db
      - DB_USERNAME=learner_user
      - DB_PASSWORD=123456
      - PYTHON_SERVICE_URL=http://python_service:8000
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - learner-network

  # Nginx Web Server
  nginx:
    image: nginx:1.25-alpine
    container_name: learner-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - php-fpm
    networks:
      - learner-network

  # Python FastAPI Microservice
  python_service:
    build:
      context: ./python_service
      dockerfile: Dockerfile
    container_name: learner-python
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./python_service:/app
      - ./profiles:/app/profiles
      - ./models:/app/models
      - ./rules:/app/rules
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - MAX_WORKERS=4
      - SANDBOX_TIMEOUT=5
      - SANDBOX_MEMORY_LIMIT=52428800
    networks:
      - learner-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: learner-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - learner-network
    command: redis-server --appendonly yes

  # Adminer
  adminer:
    image: adminer:4.8.1
    container_name: learner-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_DESIGN: pepa-linha
    depends_on:
      - mysql
    networks:
      - learner-network

networks:
  learner-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
